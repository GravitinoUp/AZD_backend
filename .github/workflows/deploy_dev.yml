name: Deploy dev

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Clone backend repository
        run: git clone https://${{ secrets.TRIGGER }}@github.com/GravitinoUp/AZD_backend.git -b ${{ github.ref_name }} azd-backend/

      - name: Check files
        run: ls -la azd-backend/

      - name: Clone devops-azd repository
        run: git clone https://${{ secrets.TRIGGER }}@github.com/GravitinoUp/devops_azd.git -b ${{ github.ref_name }}

      - name: Copy Dockerfile to backend directory
        run: |
          cp devops_azd/docker_images/backend/Dockerfile azd-backend/
          cp devops_azd/docker_images/backend/startup.sh azd-backend/

      - name: Import Secrets
        id: import-secrets
        uses: hashicorp/vault-action@v3
        with:
          url: https://vault.devops.gravitino.ru
          token: ${{ secrets.VAULT_GITHUB_SECRET }}
          secrets: |
            secret/azd-backend/dev REFRESH_SECRET | REFRESH_SECRET ;
            secret/azd-backend/dev ACCESS_SECRET | ACCESS_SECRET ;
            secret/azd-backend/dev PORT | PORT ;
            secret/azd-backend/dev DIALECT | DIALECT ;
            secret/azd-backend/dev DB_HOST | DB_HOST ;
            secret/azd-backend/dev DB_PORT | DB_PORT ;
            secret/azd-backend/dev DB_USERNAME | DB_USERNAME ;
            secret/azd-backend/dev DB_PASSWORD | DB_PASSWORD ;
            secret/azd-backend/dev DB_NAME | DB_NAME ;
            secret/azd-backend/dev REDIS_HOST | REDIS_HOST ;
            secret/azd-backend/dev REDIS_PORT | REDIS_PORT ;
            secret/azd-backend/dev CACHE_TTL | CACHE_TTL ;
            secret/azd-backend/dev DISABLE_SSL | DISABLE_SSL ;
            secret/azd-backend/dev THROTTLE_TTL | THROTTLE_TTL ;
            secret/azd-backend/dev THROTTLE_LIMIT | THROTTLE_LIMIT ;
            secret/azd-backend/dev AWS_ACCESS_KEY_ID | AWS_ACCESS_KEY_ID ;
            secret/azd-backend/dev AWS_SECRET_KEY | AWS_SECRET_KEY ;
            secret/azd-backend/dev S3_REGION | S3_REGION ;
            secret/azd-backend/dev S3_BUCKET | S3_BUCKET ;
            secret/azd-backend/dev S3_HOST | S3_HOST

      - name: Build Docker image
        run: |
          cd azd-backend/
          docker build --build-arg REFRESH_SECRET="${{ env.REFRESH_SECRET }}" --build-arg ACCESS_SECRET="${{ env.ACCESS_SECRET }}" --build-arg PORT="${{ env.PORT }}" --build-arg DIALECT="${{ env.DIALECT }}" --build-arg DB_HOST="${{ env.DB_HOST }}" --build-arg DB_PORT="${{ env.DB_PORT }}" --build-arg DB_USERNAME="${{ env.DB_USERNAME }}" --build-arg DB_PASSWORD="${{ env.DB_PASSWORD }}" --build-arg DB_NAME="${{ env.DB_NAME }}" --build-arg REDIS_HOST="${{ env.REDIS_HOST }}" --build-arg REDIS_PORT="${{ env.REDIS_PORT }}" --build-arg CACHE_TTL="${{ env.CACHE_TTL }}" --build-arg DISABLE_SSL="${{ env.DISABLE_SSL }}" --build-arg THROTTLE_TTL="${{ env.THROTTLE_TTL }}" --build-arg THROTTLE_LIMIT="${{ env.THROTTLE_LIMIT }}" --build-arg AWS_ACCESS_KEY_ID="${{ env.AWS_ACCESS_KEY_ID }}" --build-arg AWS_SECRET_KEY="${{ env.AWS_SECRET_KEY }}" --build-arg S3_REGION="${{ env.S3_REGION }}" --build-arg S3_BUCKET="${{ env.S3_BUCKET }}" --build-arg S3_HOST="${{ env.S3_HOST }}" -t azd_backend_${{ github.ref_name }} .
  
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.DOCKER_PASSWORD }} 

      - name: Tag Docker image
        run: docker tag azd_backend_${{ github.ref_name }} cr.yandex/crpi5naitl8bfj04abju/azd_backend_${{ github.ref_name }}:${{ github.sha }}

      - name: Push Docker image
        run: docker push cr.yandex/crpi5naitl8bfj04abju/azd_backend_${{ github.ref_name }}:${{ github.sha }}

      - name: Trigger devops workflow
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.TRIGGER }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'GravitinoUp',
              repo: 'devops_azd',
              workflow_id: 'backend_workflow.yml',
              ref: 'develop',
              inputs: {
                imageTag: "${{ github.sha }}"
              }
            });
